require File.expand_path(File.dirname(__FILE__) + '/spec_helper')

describe TaskMapper::Provider::Kanbanpad::Comment do
  let(:headers) { {'Authorization' => 'Basic YWJjQGcuY29tOmllODIzZDYzanM='} }
  let(:wheaders) { headers.merge('Accept' => 'application/json') }
  let(:pheaders) { headers.merge("Content-Type" => "application/json") }
  let(:project_id) { 'be74b643b64e3dc79aa0' }
  let(:ticket_id) { '4cd428c496f0734eef000007' }
  let(:comment_id) { '4d684e6f973c7d5648000009' }
  let(:tm) { TaskMapper.new(:kanbanpad, :username => 'abc@g.com', :password => 'ie823d63js') }
  let(:comment_class) { TaskMapper::Provider::Kanbanpad::Comment }

  before(:each) do
    @project = @taskmapper.project(@project_id)
    @ticket = @project.ticket(@ticket_id)
    @klass = 
  end

  it "should be able to load all comments" do 
    @comments = @ticket.comments
    @comments.should be_an_instance_of(Array)
    @comments.first.should be_an_instance_of(@klass)
  end

  it "should be able to load all comments based on array of id's" do 
    @comments = @ticket.comments([@comment_id])
    @comments.should be_an_instance_of(Array)
    @comments.first.should be_an_instance_of(@klass)
  end

  it "should be able to load all comments based on attributes" do 
    @comments = @ticket.comments(:id => @comment_id)
    @comments.should be_an_instance_of(Array)
    @comments.first.should be_an_instance_of(@klass)
  end

  it "should be able to create a comment for a given task" do
    comment = @ticket.comment!(:body => "New Ticket")
    comment.should be_an_instance_of(@klass)
    
    comment.ticket_id.should_not be_nil
    comment.ticket_id.should_not == 0
  end
  
end
